# Generated by Django 5.0.7 on 2025-01-29 17:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Architecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flow_diagram', models.ImageField(blank=True, null=True, upload_to='flow_diagram/')),
                ('system_architecture', models.FileField(blank=True, null=True, upload_to='system_architecture/')),
                ('deployment_architecture', models.FileField(blank=True, null=True, upload_to='deployment_architecture/')),
                ('dfd', models.FileField(blank=True, null=True, upload_to='dfd/')),
                ('class_diagram', models.FileField(blank=True, null=True, upload_to='class_diagram/')),
                ('wireframes', models.FileField(blank=True, null=True, upload_to='wireframes/')),
                ('ui_design', models.FileField(blank=True, null=True, upload_to='ui/')),
            ],
            options={
                'verbose_name': 'Architecture',
                'verbose_name_plural': 'Architectures',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installation_manual', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('user_manual', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('instructional_guide', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('tutorial', models.FileField(blank=True, null=True, upload_to='tutorials/')),
                ('troubleshooting_guide', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('api_documentation', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('ux_documentation', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('testing_report', models.FileField(blank=True, null=True, upload_to='documents/')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='HardwareRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardware_name', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('hardware_specification', models.TextField(blank=True)),
                ('min_cpu', models.CharField(max_length=255)),
                ('min_gpu', models.CharField(blank=True, max_length=255)),
                ('min_ram', models.PositiveIntegerField()),
                ('min_storage', models.PositiveIntegerField()),
                ('min_network', models.CharField(blank=True, max_length=255)),
                ('min_os', models.CharField(max_length=255)),
                ('rec_cpu', models.CharField(max_length=255)),
                ('rec_gpu', models.CharField(blank=True, max_length=255)),
                ('rec_ram', models.PositiveIntegerField()),
                ('rec_storage', models.PositiveIntegerField()),
                ('rec_network', models.CharField(blank=True, max_length=255)),
                ('rec_os', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_standards', models.TextField()),
                ('application_security', models.TextField()),
                ('database_security', models.TextField()),
                ('role', models.TextField()),
                ('auditing', models.TextField()),
            ],
            options={
                'verbose_name': 'Security',
                'verbose_name_plural': 'Security Details',
            },
        ),
        migrations.CreateModel(
            name='SourceCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('source_code', models.FileField(upload_to='code/')),
            ],
            options={
                'verbose_name': 'Source Code',
                'verbose_name_plural': 'Source Code Versions',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='technology/')),
                ('version', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Technology',
                'verbose_name_plural': 'Technologies',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='project/')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='api.company')),
                ('technologies', models.ManyToManyField(related_name='projects', to='api.technology')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='NonFunctionalRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.TextField()),
                ('purpose', models.TextField()),
                ('general_specifications', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_functional_requirements', to='api.project')),
            ],
            options={
                'verbose_name': 'Non-Functional Requirement',
                'verbose_name_plural': 'Non-Functional Requirements',
            },
        ),
        migrations.CreateModel(
            name='FunctionalRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=100)),
                ('feature_description', models.TextField()),
                ('user_access_management', models.TextField()),
                ('admin_panel', models.TextField()),
                ('authentication_system', models.TextField()),
                ('activity_log', models.TextField()),
                ('backup', models.TextField()),
                ('language', models.CharField(max_length=100)),
                ('multiple_access', models.TextField()),
                ('related_document_architecture', models.TextField()),
                ('development_methodology', models.TextField()),
                ('database', models.TextField()),
                ('report_module', models.TextField()),
                ('update_module', models.TextField()),
                ('delivery_timelines', models.TextField()),
                ('platform', models.TextField()),
                ('help_support', models.TextField()),
                ('feedback', models.TextField()),
                ('testing', models.TextField()),
                ('training', models.TextField()),
                ('warranty', models.TextField()),
                ('operation_maintenance', models.TextField()),
                ('architecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='api.architecture')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='api.document')),
                ('hardware_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='api.hardwarerequirement')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='api.project')),
                ('security', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='api.security')),
                ('source_code', models.ManyToManyField(related_name='functional_requirements', to='api.sourcecode')),
            ],
            options={
                'verbose_name': 'Functional Requirement',
                'verbose_name_plural': 'Functional Requirements',
            },
        ),
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='framework/')),
                ('version', models.CharField(max_length=100)),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frameworks', to='api.technology')),
            ],
            options={
                'verbose_name': 'Framework',
                'verbose_name_plural': 'Frameworks',
            },
        ),
    ]
